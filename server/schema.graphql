

# type Query {
#     hello: String!
# }


enum Size {
    HALF_PINT
    PINT
    PITCHER
}

enum BeerType {
    IPA
    STOUT
    PILSNER
    PORTER
}

type Beer {
    id: ID!
    size: Size!
    name: String!
    type: BeerType!
}

type RemoveBeerPayload {
    removed: Boolean!,
}


type Query {
    orders: [Beer]!
}

type Mutation {
    orderBeer(size: Size!, name: String!, type: BeerType!): Beer
    removeBeer(id: ID!): RemoveBeerPayload!
    #User can specify these items and then get a valid ID
}

#to add a mutatation
# Add the mutation to the schema
# Write the resolver
# Connect the mutation to our schema


#new field, orders which will return list of beer orders, we need to create a resolver for this new field
